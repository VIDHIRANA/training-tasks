/* Write a method void printArray(int[][]arr)
Prints array elements clock wise and anti-clockwise alternatively. */

// C++. program for the above approach
#include <iostream>
#include <bits/stdc++.h>

using namespace std;

void printAnti(){
  int n,m, counter= 0, counter1=0;
  cout << "\nInput the number of rows : ";
  cin >> m;
  cout << "\nInput the number of columns : ";
  cin >> n;
  int arr[m][n];
  int i,j;
  cout << "\nInput the matrix \n";
  for(i = 0; i < m; i++)
  {
    for(j = 0; j < n; j++)
    {
      cin >> arr[i][j];
    }
  }
 
   cout << "\n Anticlockwise Matrix : ";
   int k = 0, l = 0;

    // initialize the count
    int cnt = 0;

    // total number of elements in matrix
    int total = m * n;
      for(int i=0;i<n;i++){
          reverse(arr[i],arr[i]+n);
        }
                  
    // Performing Transpose
    for(int i=0;i<n;i++){ 
      for(int j=i;j<n;j++){
         swap(arr[i][j],arr[j][i]);
      }    
    }
          
    while (k < m && l < n)
      {
       if (cnt == total)
        break;

      // Print the first column from the remaining columns
      for (i = k; i < m; ++i)
        {
            cout << arr[i][l];
            cnt++;
        }
         l++;

          if (cnt == total)
            break;

          // Print the last row from the remaining rows
          for (i = l; i < n; ++i)
          {
            cout << arr[m - 1][i];
            cnt++;
          }
          m--;

          if (cnt == total)
            break;

          // Print the last column from the remaining columns
          if (k < m)
          {
            for (i = m - 1; i >= k; --i)
            {
              cout << arr[i][n - 1] ;
              cnt++;
            }
            n--;
          }

          if (cnt == total)
            break;

          // Print the first row from the remaining rows
          if (l < n)
          {
            for (i = n - 1; i >= l; --i)
            {
              cout << arr[k][i];
              cnt++;
            }
            k++;
          }
        }
  }
   

// Driver Code
int main()
{
	// Function Call
  
	printAnti();

	return 0;
}

