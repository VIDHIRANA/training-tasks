
#include <bits/stdc++.h>
using namespace std;


    void dfs(vector<vector<char>> & grid, int y, int x, int row, int col)
    {
        if(y < 0 || x < 0 || y >= row || x >= col || grid[y][x] != '1')
          {
            return ;
          }
        grid[y][x] = '#';
        dfs(grid, y + 1, x, row, col);
        dfs(grid, y - 1, x, row, col);
        dfs(grid, y, x - 1, row, col);
        dfs(grid, y, x + 1, row, col);
    }

    int islandCheck(vector<vector<char>>& grid, int row, int col) 
    {
        row = grid.size();
        if(!row) {
          return 0;
        }
        
        col = grid[0].size();
        int count = 0;
        for(int i = 0; i < row; i++)
        {
            for(int j = 0; j < col; j++)
            {
                if(grid[i][j] == '1')
                {
                    dfs(grid, i, j, row, col);
                    count++;
                }
            }
        }
        return count;
    }

int main()
{
  int row= 5, col= 5;
  int igrid[5][5] = { { 1, 1, 0, 0, 0 },
                     { 0, 1, 0, 0, 1 },
                     { 1, 0, 0, 1, 1 },
                     { 0, 0, 0, 0, 0 },
                     { 1, 0, 1, 0, 1 } };

cout<<" the no of island :"<< islandCheck(igrid, row, col);

	return 0;
}


